<?php

namespace App\Http\Controllers;

use App\Models\$model_name;
use App\Http\Requests\Store$model_nameRequest;
use App\Http\Requests\Update$model_nameRequest;

class $model_nameController extends Controller
{
    public function __construct()
    {
        $this->middleware(['can:Show $model_name']);
    }
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        $n['data'] = $model_name::orderBy('serial', 'desc')
                                ->paginate(10);
        $n['count'] = $model_name::all();
        return view('$view_nameindex', $n);
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        $this->ccan('Create $model_name');
        $n['serial'] = $model_name::count();
        return view('$view_namecreate', $n);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Store$model_nameRequest $request)
    {
        $this->ccan('Create $model_name');

        $data = $request->validated();
        $status = $model_name::create($data);

        //Redirection decission
        if($request->redirect == 'back'){
            $redirect_route = '$route_nameindex';
        }else{
            $redirect_route = '$route_namecreate';
        }

        if(!$status){
            return redirect()->route($redirect_route)->with('error', "Something went wrong");
        }
        return redirect()->route($redirect_route)->with('success', "$request->title is created successfully");
    }

    /**
     * Display the specified resource.
     */
    public function show($model_name $$model_name)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit($model_name $$model_name)
    {
        $this->ccan('Edit $model_name');

        $n['datum'] = $$model_name;
        return view('$view_nameedit', $n);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Update$model_nameRequest $request, $model_name $$model_name)
    {
        $this->ccan('Edit $model_name');

        $data = $request->validated();
        $$model_name->update($data);
        return redirect()->route('$route_nameindex')->with('success', "$request->title is Update successfully");
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy($model_namedeo $$model_name)
    {
        $this->ccan('Delete $model_name');
        $title = $$model_name->title;
        $status = $$model_name->delete();

        if ($status) {
            request()->session()->flash('success', "$title successfully deleted");
        } else {
            request()->session()->flash('error', 'Error while deleting $model_names');
        }
        return back();
    }
}
